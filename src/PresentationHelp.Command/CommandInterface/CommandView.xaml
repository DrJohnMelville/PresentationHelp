<UserControl x:Class="PresentationHelp.Command.CommandInterface.CommandView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:PresentationHelp.Command.CommandInterface"
             xmlns:eventBindings="clr-namespace:Melville.MVVM.Wpf.EventBindings;assembly=Melville.MVVM.Wpf"
             xmlns:viewFrames="clr-namespace:Melville.MVVM.Wpf.ViewFrames;assembly=Melville.MVVM.Wpf"
             xmlns:wpfViewParts="clr-namespace:PresentationHelp.WpfViewParts;assembly=PresentationHelp.WpfViewParts"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             xmlns:screenInterface="clr-namespace:PresentationHelp.ScreenInterface;assembly=PresentationHelp.ScreenInterface"
             xmlns:wpfHacks="clr-namespace:Melville.MVVM.Wpf.WpfHacks;assembly=Melville.MVVM.Wpf"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Grid PreviewKeyDown="{eventBindings:EventBinding KeyDown}">
        <Grid.Resources>
            <Style TargetType="{x:Type wpfViewParts:TextCommandButton}">
                <eventBindings:EventIocSetter Event="Click"
                                              MethodName="CommandButtonPressed"/>
                <Setter Property="Margin" Value="2 0"></Setter>
            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <WrapPanel>
            <Button Content="Show Presenter View" Click="{eventBindings:EventBinding ShowPresenter}"/>
            <wpfViewParts:TextCommandButton eventBindings:EventBinding.Parameter="~QR Margin 0 85 85 0&#13;&#10;~QR Font Size 12">QR Bottom Left</wpfViewParts:TextCommandButton>
            <wpfViewParts:TextCommandButton eventBindings:EventBinding.Parameter="~QR Margin 85 85 0 0&#13;&#10;~QR Font Size 12">QR Bottom Right</wpfViewParts:TextCommandButton>
            <wpfViewParts:TextCommandButton eventBindings:EventBinding.Parameter="~QR Margin 10&#13;&#10;~QR Font Size 24">QR Big</wpfViewParts:TextCommandButton>
            <wpfViewParts:TextCommandButton eventBindings:EventBinding.Parameter="~Hide Both"
                   wpfHacks:VisibilityHack.CollapseUnless="{Binding Meeting.Holder.ConnectionInfo.ShowQR}">Hide QR</wpfViewParts:TextCommandButton>
            <wpfViewParts:TextCommandButton eventBindings:EventBinding.Parameter="~Show Both"
                   wpfHacks:VisibilityHack.CollapseIf="{Binding Meeting.Holder.ConnectionInfo.ShowQR}">Show QR</wpfViewParts:TextCommandButton>
        </WrapPanel>
        <TextBlock Grid.Row="1">Enter a Command</TextBlock>
        <DockPanel Grid.Row="2" Margin="0, 0, 0, 5">
            <ScrollViewer DockPanel.Dock="Right" MaxWidth="250" HorizontalScrollBarVisibility="Auto">
                <TreeView DockPanel.Dock="Right" ItemsSource="{Binding Meeting.Holder.Targets}">
                    <ItemsControl.ItemTemplate>
                        <HierarchicalDataTemplate DataType="{x:Type screenInterface:ICommandParser}"
                                                  ItemsSource="{Binding Commands}">
                            <TextBlock Text="{Binding Title}"/>
                        </HierarchicalDataTemplate>
                    </ItemsControl.ItemTemplate>
                </TreeView>
            </ScrollViewer>
            <Button DockPanel.Dock="Bottom" Content="Submit Command" 
                    Click="{eventBindings:EventBinding ExecuteCommand}"
                    IsEnabled="{Binding CanExecuteCommand}"></Button>
            <TextBox Text="{Binding NextCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                     AcceptsReturn="True" AcceptsTab="False"/>
        </DockPanel>
        <GridSplitter Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                      Height="5"/>
        <WrapPanel Grid.Row="3">
            <wpfViewParts:TextCommandButton 
                eventBindings:EventBinding.Parameter ="{Binding Meeting.Holder.ResponsesLocked,
            ConverterParameter=~AllowResponses|~LockResponses,
            Converter={x:Static wpfViewParts:BoolStringConverter.Instance}}"
                Content ="{Binding Meeting.Holder.ResponsesLocked,
            ConverterParameter=Allow Responses|Lock Responses,
            Converter={x:Static wpfViewParts:BoolStringConverter.Instance}}"
            />

            <TextBlock Margin="7 0">Font Size</TextBlock>
            <ComboBox SelectedItem="{Binding Meeting.Holder.SelectedFontSize, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      eventBindings:EventBinding.Parameter="{Binding Meeting.Holder.FontSizeCommand}"
                      SelectionChanged="{eventBindings:EventBinding CommandButtonPressed}">
                <ComboBox.Items>
                    <system:String>8</system:String>
                    <system:String>12</system:String>
                    <system:String>18</system:String>
                    <system:String>24</system:String>
                    <system:String>36</system:String>
                    <system:String>40</system:String>
                    <system:String>52</system:String>
                    <system:String>70</system:String>
                    <system:String>90</system:String>
                    <system:String>100</system:String>
                    <system:String>120</system:String>
                </ComboBox.Items>
            </ComboBox>
        </WrapPanel>
        <viewFrames:ViewFrame Grid.Row="4" Content="{Binding Meeting.CurrentScreen.CommandViewModel}">
        </viewFrames:ViewFrame>
    </Grid>
</UserControl>
